version: '3.8'

services:

  # Retriever:
  #   image: shmuelblau/retriever:2
  #   container_name: Retriever
  #   restart: always
   
  #   depends_on:
  #     - kafka 

  #   environment:
  #      HOST: "kafka" 
      
       
     
  #   command: [ "python" , "main.py"]
  #   networks:
  #     Models:


# ------------------------------------------------------------------- 

#   zookeeper:
#     image: 'bitnami/zookeeper:3.8'
#     container_name: zookeeper
#     ports:
#       - '2181:2181'
#     environment:
#       - ALLOW_ANONYMOUS_LOGIN=yes
#     networks:
#       Models:
# # ------------------------------------------------------------------- 

#   kafka:
#     image: 'bitnami/kafka:3.7'
#     container_name: kafka
#     ports:
#       - '9092:9092'
#     environment:
#       - KAFKA_BROKER_ID=1
#       - KAFKA_LISTENERS=PLAINTEXT://:9092
#       - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#       - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#       - ALLOW_PLAINTEXT_LISTENER=yes
     

#     depends_on:
#       - zookeeper
#     networks:
#       Models:

# ------------------------------------------------------------------- 

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
        KAFKA_BROKER_CONNECT: "kafka:9092"
    depends_on:
      - kafka
    networks:
      Models:

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true 
    networks:
      Models:
# ------------------------------------------------------------------- 


  # kafdrop:
  #   image: obsidiandynamics/kafdrop
  #   ports:
  #     - "9000:9000"
  #   environment:
  #     KAFKA_BROKER_CONNECT: "kafka:9092"
  #   depends_on:
  #     - kafka
  #   networks:
  #     Models:
# ------------------------------------------------------------------- 

  mongodb:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: shmuel
      MONGO_INITDB_ROOT_PASSWORD: "1234"
      MONGO_INITDB_DATABASE: TextFeature
    volumes:
      - mongo-data:/data/db
     
    restart: unless-stopped
    networks:
      Models:

# ------------------------------------------------------------------- 

volumes:
  mongo-data:

networks:
  
  Models:
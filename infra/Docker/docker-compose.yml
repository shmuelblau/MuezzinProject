

services:

  Preprocessor:
    image: shmuelblau/preprocessor:1
    container_name: preprocessor
    
    
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
       HOST: "kafka"
       PATH_DIR: "/app/podcasts"
       TOPIC_NAME : "Metadata_Muezzin"
       
       
     
    command: ["python" , "main.py"]
    volumes:
      - C:/podcasts:/app/podcasts
    networks:
      MuezzinProject:


      
# ------------------------------------------------------------------- 
  DataLoader:
    image: shmuelblau/dataloader:1
    container_name: dataloader
    
    depends_on:
      elasticsearch:
        condition: service_healthy
    

    environment:
       KAFKA_HOST: kafka
       TOPIC_NAME: Metadata_Muezzin
       CONNECTION_STRING: mongodb://shmuel:1234@mongo:27017/Muezzin?authSource=admin
       DATABASE: Muezzin
       ELASTICSEARCH_HOST: elasticsearch
       ELASTICSEARCH_INDEX: metadata_muezzin
       
     
    command: ["python" , "main.py"]
    volumes:
      - C:/podcasts:/app/podcasts
    networks:
      MuezzinProject:

  # ------------------------------------------------------------------- 
  Transcriber:
    image: shmuelblau/transcriber:1
    container_name: transcriber
    
    depends_on:
      elasticsearch:
        condition: service_healthy
    

    environment:
       CONNECTION_STRING: mongodb://shmuel:1234@mongo:27017/Muezzin?authSource=admin
       DATABASE: Muezzin
       ELASTICSEARCH_HOST: elasticsearch
       ELASTICSEARCH_INDEX: metadata_muezzin
       
    command: ["python" , "main.py"]
    
    networks:
      MuezzinProject:



# ------------------------------------------------------------------- 

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
        KAFKA_BROKER_CONNECT: "kafka:9092"
    depends_on:
      - kafka
    networks:
      MuezzinProject:

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true 
    networks:
      MuezzinProject:
# ------------------------------------------------------------------- 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      MuezzinProject:

    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"' || curl -s http://localhost:9200/_cluster/health | grep -q '\"status\":\"yellow\"'"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s 
# ------------------------------------------------------------------- 
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      MuezzinProject:
# ------------------------------------------------------------------- 

  mongodb:
    image: mongo:6.0
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: shmuel
      MONGO_INITDB_ROOT_PASSWORD: "1234"
      MONGO_INITDB_DATABASE: Muezzin
    
     
    restart: unless-stopped
    networks:
      MuezzinProject:

# ------------------------------------------------------------------- 



networks:
  
  MuezzinProject: